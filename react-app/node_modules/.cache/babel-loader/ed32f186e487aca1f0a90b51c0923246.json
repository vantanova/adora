{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport message from '../message';\nimport notification from '../notification';\nexport { ConfigContext, ConfigConsumer };\nexport var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader']; // These props is used by `useContext` directly in sub component\n\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'form'];\nexport var defaultPrefixCls = 'ant';\nvar globalPrefixCls = defaultPrefixCls;\n\nvar setGlobalConfig = function setGlobalConfig(params) {\n  if (params.prefixCls !== undefined) {\n    globalPrefixCls = params.prefixCls;\n  }\n};\n\nexport var globalConfig = function globalConfig() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(globalPrefixCls, \"-\").concat(suffixCls) : globalPrefixCls;\n    }\n  };\n};\n\nvar ProviderChildren = function ProviderChildren(props) {\n  var children = props.children,\n      csp = props.csp,\n      autoInsertSpaceInButton = props.autoInsertSpaceInButton,\n      form = props.form,\n      locale = props.locale,\n      componentSize = props.componentSize,\n      direction = props.direction,\n      space = props.space,\n      virtual = props.virtual,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      legacyLocale = props.legacyLocale,\n      parentContext = props.parentContext,\n      iconPrefixCls = props.iconPrefixCls;\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls) return customizePrefixCls;\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls]);\n\n  var config = _extends(_extends({}, parentContext), {\n    csp: csp,\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\n    locale: locale || legacyLocale,\n    direction: direction,\n    space: space,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    getPrefixCls: getPrefixCls\n  }); // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n\n\n  PASSED_PROPS.forEach(function (propName) {\n    var propValue = props[propName];\n\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  }); // https://github.com/ant-design/ant-design/issues/27617\n\n  var memoedConfig = useMemo(function () {\n    return config;\n  }, config, function (prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\n      return prevConfig[key] !== currentConfig[key];\n    });\n  });\n  var memoIconContextValue = React.useMemo(function () {\n    return {\n      prefixCls: iconPrefixCls\n    };\n  }, [iconPrefixCls]);\n  var childNode = children; // Additional Form provider\n\n  var validateMessages = {};\n\n  if (locale && locale.Form && locale.Form.defaultValidateMessages) {\n    validateMessages = locale.Form.defaultValidateMessages;\n  }\n\n  if (form && form.validateMessages) {\n    validateMessages = _extends(_extends({}, validateMessages), form.validateMessages);\n  }\n\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(RcFormProvider, {\n      validateMessages: validateMessages\n    }, children);\n  }\n\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n\n  if (iconPrefixCls) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\n\nvar ConfigProvider = function ConfigProvider(props) {\n  React.useEffect(function () {\n    if (props.direction) {\n      message.config({\n        rtl: props.direction === 'rtl'\n      });\n      notification.config({\n        rtl: props.direction === 'rtl'\n      });\n    }\n  }, [props.direction]);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ProviderChildren, _extends({\n        parentContext: context,\n        legacyLocale: legacyLocale\n      }, props));\n    });\n  });\n};\n/** @private internal Usage. do not use in your production */\n\n\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nexport default ConfigProvider;","map":{"version":3,"sources":["/home/anguilar/adora/react-app/node_modules/antd/es/config-provider/index.js"],"names":["_extends","React","IconContext","FormProvider","RcFormProvider","useMemo","LocaleProvider","ANT_MARK","LocaleReceiver","ConfigConsumer","ConfigContext","SizeContext","SizeContextProvider","message","notification","configConsumerProps","PASSED_PROPS","defaultPrefixCls","globalPrefixCls","setGlobalConfig","params","prefixCls","undefined","globalConfig","getPrefixCls","suffixCls","customizePrefixCls","concat","ProviderChildren","props","children","csp","autoInsertSpaceInButton","form","locale","componentSize","direction","space","virtual","dropdownMatchSelectWidth","legacyLocale","parentContext","iconPrefixCls","useCallback","mergedPrefixCls","config","forEach","propName","propValue","memoedConfig","prevConfig","currentConfig","prevKeys","Object","keys","currentKeys","length","some","key","memoIconContextValue","childNode","validateMessages","Form","defaultValidateMessages","createElement","_ANT_MARK__","Provider","value","size","ConfigProvider","useEffect","rtl","_","__","context"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport message from '../message';\nimport notification from '../notification';\nexport { ConfigContext, ConfigConsumer };\nexport var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader']; // These props is used by `useContext` directly in sub component\n\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'form'];\nexport var defaultPrefixCls = 'ant';\nvar globalPrefixCls = defaultPrefixCls;\n\nvar setGlobalConfig = function setGlobalConfig(params) {\n  if (params.prefixCls !== undefined) {\n    globalPrefixCls = params.prefixCls;\n  }\n};\n\nexport var globalConfig = function globalConfig() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(globalPrefixCls, \"-\").concat(suffixCls) : globalPrefixCls;\n    }\n  };\n};\n\nvar ProviderChildren = function ProviderChildren(props) {\n  var children = props.children,\n      csp = props.csp,\n      autoInsertSpaceInButton = props.autoInsertSpaceInButton,\n      form = props.form,\n      locale = props.locale,\n      componentSize = props.componentSize,\n      direction = props.direction,\n      space = props.space,\n      virtual = props.virtual,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      legacyLocale = props.legacyLocale,\n      parentContext = props.parentContext,\n      iconPrefixCls = props.iconPrefixCls;\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls) return customizePrefixCls;\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls]);\n\n  var config = _extends(_extends({}, parentContext), {\n    csp: csp,\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\n    locale: locale || legacyLocale,\n    direction: direction,\n    space: space,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    getPrefixCls: getPrefixCls\n  }); // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n\n\n  PASSED_PROPS.forEach(function (propName) {\n    var propValue = props[propName];\n\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  }); // https://github.com/ant-design/ant-design/issues/27617\n\n  var memoedConfig = useMemo(function () {\n    return config;\n  }, config, function (prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\n      return prevConfig[key] !== currentConfig[key];\n    });\n  });\n  var memoIconContextValue = React.useMemo(function () {\n    return {\n      prefixCls: iconPrefixCls\n    };\n  }, [iconPrefixCls]);\n  var childNode = children; // Additional Form provider\n\n  var validateMessages = {};\n\n  if (locale && locale.Form && locale.Form.defaultValidateMessages) {\n    validateMessages = locale.Form.defaultValidateMessages;\n  }\n\n  if (form && form.validateMessages) {\n    validateMessages = _extends(_extends({}, validateMessages), form.validateMessages);\n  }\n\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(RcFormProvider, {\n      validateMessages: validateMessages\n    }, children);\n  }\n\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n\n  if (iconPrefixCls) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\n\nvar ConfigProvider = function ConfigProvider(props) {\n  React.useEffect(function () {\n    if (props.direction) {\n      message.config({\n        rtl: props.direction === 'rtl'\n      });\n      notification.config({\n        rtl: props.direction === 'rtl'\n      });\n    }\n  }, [props.direction]);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ProviderChildren, _extends({\n        parentContext: context,\n        legacyLocale: legacyLocale\n      }, props));\n    });\n  });\n};\n/** @private internal Usage. do not use in your production */\n\n\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nexport default ConfigProvider;"]},"metadata":{},"sourceType":"module"}